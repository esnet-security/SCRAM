---

services:
  django:
    build:
      context: .
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      default: {}
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=0
    command: /start
    healthcheck:
      interval: 30s
      timeout: 30s
      start_period: 30s
      retries: 5
    deploy:
      replicas: ${DJANGO_REPLICAS:-1}

  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: scram_production_postgres
    networks:
      default: {}
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=0
    deploy:
      replicas: ${POSTGRES_ENABLED:-0}

  redis:
    image: redis:5.0
    networks:
      default: {}
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=0
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]

  gobgp:
    image: jauderho/gobgp:v3.33.0
    networks:
      default: {}
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=0
    healthcheck:
      test: ["CMD", "gobgp", "global"]
    deploy:
      replicas: ${GOBGP_REPLICAS:-1}

  translator:
    build:
      context: .
      dockerfile: ./compose/local/translator/Dockerfile
    depends_on:
      redis:
        condition: service_healthy
      gobgp:
        condition: service_healthy
    networks:
      default: {}
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=0
    deploy:
      replicas: ${TRANSLATOR_REPLICAS:-1}
